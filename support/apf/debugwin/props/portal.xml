<props><portal><group caption="General"><prop caption="columns" editor="textbox" value="[@columns]" description="a comma seperated list of column sizes.
A column size can be specified in a number (size in pixels) or using
a number and a % sign to indicate a percentage.
Defaults to &quot;33%, 33%, 33%&quot;."/></group><group caption="MultiSelect"><prop caption="multiselect" editor="checkbox" value="[@multiselect]" description="whether the user may select multiple items. Default is true, false for dropdown." values="true|false"/><prop caption="autoselect" editor="checkbox" value="[@autoselect]" description="whether a selection is made after data is loaded. Default is true, false for dropdown. When the string 'all' is set, all {@link term.datanode data nodes} are selected." values="true|false"/><prop caption="selectable" editor="checkbox" value="[@selectable]" description="whether the {@link term.datanode data nodes} of this element can be selected. Default is true." values="true|false"/><prop caption="ctrlselect" editor="checkbox" value="[@ctrlselect]" description="whether when a selection is made as if the user is holding the Ctrl key. When set to true each mouse selection will add to the current selection. selecting an already selected element will deselect it." values="true|false"/><prop caption="allowdeselect" editor="checkbox" value="[@allowdeselect]" description="whether the user can remove the selection of this element. When set to true it is possible for this element to have no selected {@link term.datanode data node}." values="true|false"/><prop caption="reselectable" editor="checkbox" value="[@reselectable]" description="whether selected nodes can be selected again and the selection events are called again. Default is false. When set to false a selected {@link term.datanode data node} cannot be selected again." values="true|false"/><prop caption="default" editor="textbox" value="[@default]" description="the value that this component has when no selection is made."/><prop caption="eachvalue" editor="textbox" value="[@eachvalue]" description="the {@link term.expression expression} that determines the value for each {@link term.datanode data nodes} in the dataset of the element."/><prop caption="value" editor="textbox" value="[@value]" description="the value of the element that is selected."/><prop caption="selection" editor="textbox" value="[@selection]" description="the {@link term.expression expression} that determines the selection for this element. A reference to an xml nodelist can be passed as well."/><prop caption="selected" editor="textbox" value="[@selected]" description="the {@link term.expression expression} that determines the selected node for this element. A reference to an xml element can be passed as well."/></group><group caption="DataAction"><prop caption="create-model" editor="checkbox" value="[@create-model]" description="whether the model this element connects
to is extended when the data pointed to does not exist. Defaults to true." values="true|false"/></group><group caption="Cache"><prop caption="caching" editor="checkbox" value="[@caching]" description="whether caching is enabled for this element." values="true|false"/></group><events caption="Events"><prop caption="beforeselect" editor="textbox" value="[@beforeselect]" type="event" description="Fires before a {@link baseclass.multiselect.method.select selection} is made"/><prop caption="afterselect" editor="textbox" value="[@afterselect]" type="event" description="Fires after a {@link baseclass.multiselect.method.select selection} is made"/><prop caption="beforechoose" editor="textbox" value="[@beforechoose]" type="event" description="Fires before a choice is made."/><prop caption="afterchoose" editor="textbox" value="[@afterchoose]" type="event" description="Fires after a choice is made."/><prop caption="indicate" editor="textbox" value="[@indicate]" type="event" description="Fires when an item becomes the indicator."/><prop caption="locksuccess" editor="textbox" value="[@locksuccess]" type="event" description="Fires when a lock request succeeds"/><prop caption="lockfailed" editor="textbox" value="[@lockfailed]" type="event" description="Fires when a lock request failes"/><prop caption="unlocksuccess" editor="textbox" value="[@unlocksuccess]" type="event" description="Fires when an unlock request succeeds"/><prop caption="unlockfailed" editor="textbox" value="[@unlockfailed]" type="event" description="Fires when an unlock request fails"/><prop caption="propertychange" editor="textbox" value="[@propertychange]" type="event" description="Fires when a property changes."/></events></portal></props>